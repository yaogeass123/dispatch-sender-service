<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dianwoba.dispatch.sender.mapper.MessageLogMapper">
  <resultMap id="BaseResultMap" type="com.dianwoba.dispatch.sender.entity.MessageLog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="app_code" jdbcType="VARCHAR" property="appCode" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="exception_type" jdbcType="VARCHAR" property="exceptionType" />
    <result column="msg" jdbcType="VARCHAR" property="msg" />
    <result column="digest" jdbcType="VARCHAR" property="digest" />
    <result column="level" jdbcType="TINYINT" property="level" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="ins_tm" jdbcType="TIMESTAMP" property="insTm" />
    <result column="handle_tm" jdbcType="TIMESTAMP" property="handleTm" />
    <result column="handled" jdbcType="BIT" property="handled" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, app_code, ip, exception_type, msg, digest, level, time, ins_tm, handle_tm, handled
  </sql>
  <select id="selectByExample" parameterType="com.dianwoba.dispatch.sender.entity.MessageLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `message_log`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.value}
        </foreach>
      </when>
      <otherwise>
        id, app_code, ip, exception_type, msg, digest, level, time, ins_tm, handle_tm, handled
          
      </otherwise>
    </choose>
    from `message_log`
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `message_log`
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.value}
        </foreach>
      </when>
      <otherwise>
        id, app_code, ip, exception_type, msg, digest, level, time, ins_tm, handle_tm, handled
          
      </otherwise>
    </choose>
    from `message_log`
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from `message_log`
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.dianwoba.dispatch.sender.entity.MessageLogExample">
    delete from `message_log`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dianwoba.dispatch.sender.entity.MessageLog">
    insert into `message_log` (id, app_code, ip, 
      exception_type, msg, digest, 
      level, time, ins_tm, 
      handle_tm, handled)
    values (#{id,jdbcType=BIGINT}, #{appCode,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, 
      #{exceptionType,jdbcType=VARCHAR}, #{msg,jdbcType=VARCHAR}, #{digest,jdbcType=VARCHAR}, 
      #{level,jdbcType=TINYINT}, #{time,jdbcType=TIMESTAMP}, #{insTm,jdbcType=TIMESTAMP}, 
      #{handleTm,jdbcType=TIMESTAMP}, #{handled,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.dianwoba.dispatch.sender.entity.MessageLog">
    insert into `message_log`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="appCode != null">
        app_code,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="exceptionType != null">
        exception_type,
      </if>
      <if test="msg != null">
        msg,
      </if>
      <if test="digest != null">
        digest,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="insTm != null">
        ins_tm,
      </if>
      <if test="handleTm != null">
        handle_tm,
      </if>
      <if test="handled != null">
        handled,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="appCode != null">
        #{appCode,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="exceptionType != null">
        #{exceptionType,jdbcType=VARCHAR},
      </if>
      <if test="msg != null">
        #{msg,jdbcType=VARCHAR},
      </if>
      <if test="digest != null">
        #{digest,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=TINYINT},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="insTm != null">
        #{insTm,jdbcType=TIMESTAMP},
      </if>
      <if test="handleTm != null">
        #{handleTm,jdbcType=TIMESTAMP},
      </if>
      <if test="handled != null">
        #{handled,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dianwoba.dispatch.sender.entity.MessageLogExample" resultType="java.lang.Long">
    select count(*) from `message_log`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `message_log`
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.appCode != null">
        app_code = #{record.appCode,jdbcType=VARCHAR},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.exceptionType != null">
        exception_type = #{record.exceptionType,jdbcType=VARCHAR},
      </if>
      <if test="record.msg != null">
        msg = #{record.msg,jdbcType=VARCHAR},
      </if>
      <if test="record.digest != null">
        digest = #{record.digest,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=TINYINT},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.insTm != null">
        ins_tm = #{record.insTm,jdbcType=TIMESTAMP},
      </if>
      <if test="record.handleTm != null">
        handle_tm = #{record.handleTm,jdbcType=TIMESTAMP},
      </if>
      <if test="record.handled != null">
        handled = #{record.handled,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `message_log`
    set id = #{record.id,jdbcType=BIGINT},
      app_code = #{record.appCode,jdbcType=VARCHAR},
      ip = #{record.ip,jdbcType=VARCHAR},
      exception_type = #{record.exceptionType,jdbcType=VARCHAR},
      msg = #{record.msg,jdbcType=VARCHAR},
      digest = #{record.digest,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=TINYINT},
      time = #{record.time,jdbcType=TIMESTAMP},
      ins_tm = #{record.insTm,jdbcType=TIMESTAMP},
      handle_tm = #{record.handleTm,jdbcType=TIMESTAMP},
      handled = #{record.handled,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dianwoba.dispatch.sender.entity.MessageLog">
    update `message_log`
    <set>
      <if test="appCode != null">
        app_code = #{appCode,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="exceptionType != null">
        exception_type = #{exceptionType,jdbcType=VARCHAR},
      </if>
      <if test="msg != null">
        msg = #{msg,jdbcType=VARCHAR},
      </if>
      <if test="digest != null">
        digest = #{digest,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=TINYINT},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="insTm != null">
        ins_tm = #{insTm,jdbcType=TIMESTAMP},
      </if>
      <if test="handleTm != null">
        handle_tm = #{handleTm,jdbcType=TIMESTAMP},
      </if>
      <if test="handled != null">
        handled = #{handled,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dianwoba.dispatch.sender.entity.MessageLog">
    update `message_log`
    set app_code = #{appCode,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      exception_type = #{exceptionType,jdbcType=VARCHAR},
      msg = #{msg,jdbcType=VARCHAR},
      digest = #{digest,jdbcType=VARCHAR},
      level = #{level,jdbcType=TINYINT},
      time = #{time,jdbcType=TIMESTAMP},
      ins_tm = #{insTm,jdbcType=TIMESTAMP},
      handle_tm = #{handleTm,jdbcType=TIMESTAMP},
      handled = #{handled,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into `message_log`
    (id, app_code, ip, exception_type, msg, digest, level, time, ins_tm, handle_tm, handled
      )
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.appCode,jdbcType=VARCHAR}, #{item.ip,jdbcType=VARCHAR}, 
        #{item.exceptionType,jdbcType=VARCHAR}, #{item.msg,jdbcType=VARCHAR}, #{item.digest,jdbcType=VARCHAR}, 
        #{item.level,jdbcType=TINYINT}, #{item.time,jdbcType=TIMESTAMP}, #{item.insTm,jdbcType=TIMESTAMP}, 
        #{item.handleTm,jdbcType=TIMESTAMP}, #{item.handled,jdbcType=BIT})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into `message_log` (
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id' == column.value">
          #{item.id,jdbcType=BIGINT}
        </if>
        <if test="'app_code' == column.value">
          #{item.appCode,jdbcType=VARCHAR}
        </if>
        <if test="'ip' == column.value">
          #{item.ip,jdbcType=VARCHAR}
        </if>
        <if test="'exception_type' == column.value">
          #{item.exceptionType,jdbcType=VARCHAR}
        </if>
        <if test="'msg' == column.value">
          #{item.msg,jdbcType=VARCHAR}
        </if>
        <if test="'digest' == column.value">
          #{item.digest,jdbcType=VARCHAR}
        </if>
        <if test="'level' == column.value">
          #{item.level,jdbcType=TINYINT}
        </if>
        <if test="'time' == column.value">
          #{item.time,jdbcType=TIMESTAMP}
        </if>
        <if test="'ins_tm' == column.value">
          #{item.insTm,jdbcType=TIMESTAMP}
        </if>
        <if test="'handle_tm' == column.value">
          #{item.handleTm,jdbcType=TIMESTAMP}
        </if>
        <if test="'handled' == column.value">
          #{item.handled,jdbcType=BIT}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>