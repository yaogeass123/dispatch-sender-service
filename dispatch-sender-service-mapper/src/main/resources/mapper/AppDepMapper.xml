<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dianwoba.dispatch.sender.mapper.AppDepMapper">
  <resultMap id="BaseResultMap" type="com.dianwoba.dispatch.sender.entity.AppDep">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="app_name" jdbcType="VARCHAR" property="appName" />
    <result column="owners_dep_id" jdbcType="VARCHAR" property="ownersDepId" />
    <result column="owners_phone" jdbcType="VARCHAR" property="ownersPhone" />
    <result column="owners_mail" jdbcType="VARCHAR" property="ownersMail" />
    <result column="developers_dep_id" jdbcType="VARCHAR" property="developersDepId" />
    <result column="developers_phone" jdbcType="VARCHAR" property="developersPhone" />
    <result column="developers_mail" jdbcType="VARCHAR" property="developersMail" />
    <result column="dep_id" jdbcType="INTEGER" property="depId" />
    <result column="manual_dep_id" jdbcType="INTEGER" property="manualDepId" />
    <result column="dep_plat_modify_time" jdbcType="TIMESTAMP" property="depPlatModifyTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, app_name, owners_dep_id, owners_phone, owners_mail, developers_dep_id, developers_phone, 
    developers_mail, dep_id, manual_dep_id, dep_plat_modify_time, create_time, modify_time
  </sql>
  <select id="selectByExample" parameterType="com.dianwoba.dispatch.sender.entity.AppDepExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `app_dep`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.value}
        </foreach>
      </when>
      <otherwise>
        id, app_name, owners_dep_id, owners_phone, owners_mail, developers_dep_id, developers_phone, 
          developers_mail, dep_id, manual_dep_id, dep_plat_modify_time, create_time, modify_time
          
      </otherwise>
    </choose>
    from `app_dep`
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `app_dep`
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.value}
        </foreach>
      </when>
      <otherwise>
        id, app_name, owners_dep_id, owners_phone, owners_mail, developers_dep_id, developers_phone, 
          developers_mail, dep_id, manual_dep_id, dep_plat_modify_time, create_time, modify_time
          
      </otherwise>
    </choose>
    from `app_dep`
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from `app_dep`
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.dianwoba.dispatch.sender.entity.AppDepExample">
    delete from `app_dep`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dianwoba.dispatch.sender.entity.AppDep">
    insert into `app_dep` (id, app_name, owners_dep_id, 
      owners_phone, owners_mail, developers_dep_id, 
      developers_phone, developers_mail, dep_id, 
      manual_dep_id, dep_plat_modify_time, create_time, 
      modify_time)
    values (#{id,jdbcType=BIGINT}, #{appName,jdbcType=VARCHAR}, #{ownersDepId,jdbcType=VARCHAR}, 
      #{ownersPhone,jdbcType=VARCHAR}, #{ownersMail,jdbcType=VARCHAR}, #{developersDepId,jdbcType=VARCHAR}, 
      #{developersPhone,jdbcType=VARCHAR}, #{developersMail,jdbcType=VARCHAR}, #{depId,jdbcType=INTEGER}, 
      #{manualDepId,jdbcType=INTEGER}, #{depPlatModifyTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.dianwoba.dispatch.sender.entity.AppDep">
    insert into `app_dep`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="appName != null">
        app_name,
      </if>
      <if test="ownersDepId != null">
        owners_dep_id,
      </if>
      <if test="ownersPhone != null">
        owners_phone,
      </if>
      <if test="ownersMail != null">
        owners_mail,
      </if>
      <if test="developersDepId != null">
        developers_dep_id,
      </if>
      <if test="developersPhone != null">
        developers_phone,
      </if>
      <if test="developersMail != null">
        developers_mail,
      </if>
      <if test="depId != null">
        dep_id,
      </if>
      <if test="manualDepId != null">
        manual_dep_id,
      </if>
      <if test="depPlatModifyTime != null">
        dep_plat_modify_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="appName != null">
        #{appName,jdbcType=VARCHAR},
      </if>
      <if test="ownersDepId != null">
        #{ownersDepId,jdbcType=VARCHAR},
      </if>
      <if test="ownersPhone != null">
        #{ownersPhone,jdbcType=VARCHAR},
      </if>
      <if test="ownersMail != null">
        #{ownersMail,jdbcType=VARCHAR},
      </if>
      <if test="developersDepId != null">
        #{developersDepId,jdbcType=VARCHAR},
      </if>
      <if test="developersPhone != null">
        #{developersPhone,jdbcType=VARCHAR},
      </if>
      <if test="developersMail != null">
        #{developersMail,jdbcType=VARCHAR},
      </if>
      <if test="depId != null">
        #{depId,jdbcType=INTEGER},
      </if>
      <if test="manualDepId != null">
        #{manualDepId,jdbcType=INTEGER},
      </if>
      <if test="depPlatModifyTime != null">
        #{depPlatModifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dianwoba.dispatch.sender.entity.AppDepExample" resultType="java.lang.Long">
    select count(*) from `app_dep`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `app_dep`
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.appName != null">
        app_name = #{record.appName,jdbcType=VARCHAR},
      </if>
      <if test="record.ownersDepId != null">
        owners_dep_id = #{record.ownersDepId,jdbcType=VARCHAR},
      </if>
      <if test="record.ownersPhone != null">
        owners_phone = #{record.ownersPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.ownersMail != null">
        owners_mail = #{record.ownersMail,jdbcType=VARCHAR},
      </if>
      <if test="record.developersDepId != null">
        developers_dep_id = #{record.developersDepId,jdbcType=VARCHAR},
      </if>
      <if test="record.developersPhone != null">
        developers_phone = #{record.developersPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.developersMail != null">
        developers_mail = #{record.developersMail,jdbcType=VARCHAR},
      </if>
      <if test="record.depId != null">
        dep_id = #{record.depId,jdbcType=INTEGER},
      </if>
      <if test="record.manualDepId != null">
        manual_dep_id = #{record.manualDepId,jdbcType=INTEGER},
      </if>
      <if test="record.depPlatModifyTime != null">
        dep_plat_modify_time = #{record.depPlatModifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `app_dep`
    set id = #{record.id,jdbcType=BIGINT},
      app_name = #{record.appName,jdbcType=VARCHAR},
      owners_dep_id = #{record.ownersDepId,jdbcType=VARCHAR},
      owners_phone = #{record.ownersPhone,jdbcType=VARCHAR},
      owners_mail = #{record.ownersMail,jdbcType=VARCHAR},
      developers_dep_id = #{record.developersDepId,jdbcType=VARCHAR},
      developers_phone = #{record.developersPhone,jdbcType=VARCHAR},
      developers_mail = #{record.developersMail,jdbcType=VARCHAR},
      dep_id = #{record.depId,jdbcType=INTEGER},
      manual_dep_id = #{record.manualDepId,jdbcType=INTEGER},
      dep_plat_modify_time = #{record.depPlatModifyTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dianwoba.dispatch.sender.entity.AppDep">
    update `app_dep`
    <set>
      <if test="appName != null">
        app_name = #{appName,jdbcType=VARCHAR},
      </if>
      <if test="ownersDepId != null">
        owners_dep_id = #{ownersDepId,jdbcType=VARCHAR},
      </if>
      <if test="ownersPhone != null">
        owners_phone = #{ownersPhone,jdbcType=VARCHAR},
      </if>
      <if test="ownersMail != null">
        owners_mail = #{ownersMail,jdbcType=VARCHAR},
      </if>
      <if test="developersDepId != null">
        developers_dep_id = #{developersDepId,jdbcType=VARCHAR},
      </if>
      <if test="developersPhone != null">
        developers_phone = #{developersPhone,jdbcType=VARCHAR},
      </if>
      <if test="developersMail != null">
        developers_mail = #{developersMail,jdbcType=VARCHAR},
      </if>
      <if test="depId != null">
        dep_id = #{depId,jdbcType=INTEGER},
      </if>
      <if test="manualDepId != null">
        manual_dep_id = #{manualDepId,jdbcType=INTEGER},
      </if>
      <if test="depPlatModifyTime != null">
        dep_plat_modify_time = #{depPlatModifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dianwoba.dispatch.sender.entity.AppDep">
    update `app_dep`
    set app_name = #{appName,jdbcType=VARCHAR},
      owners_dep_id = #{ownersDepId,jdbcType=VARCHAR},
      owners_phone = #{ownersPhone,jdbcType=VARCHAR},
      owners_mail = #{ownersMail,jdbcType=VARCHAR},
      developers_dep_id = #{developersDepId,jdbcType=VARCHAR},
      developers_phone = #{developersPhone,jdbcType=VARCHAR},
      developers_mail = #{developersMail,jdbcType=VARCHAR},
      dep_id = #{depId,jdbcType=INTEGER},
      manual_dep_id = #{manualDepId,jdbcType=INTEGER},
      dep_plat_modify_time = #{depPlatModifyTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into `app_dep`
    (id, app_name, owners_dep_id, owners_phone, owners_mail, developers_dep_id, developers_phone, 
      developers_mail, dep_id, manual_dep_id, dep_plat_modify_time, create_time, modify_time
      )
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.appName,jdbcType=VARCHAR}, #{item.ownersDepId,jdbcType=VARCHAR}, 
        #{item.ownersPhone,jdbcType=VARCHAR}, #{item.ownersMail,jdbcType=VARCHAR}, #{item.developersDepId,jdbcType=VARCHAR}, 
        #{item.developersPhone,jdbcType=VARCHAR}, #{item.developersMail,jdbcType=VARCHAR}, 
        #{item.depId,jdbcType=INTEGER}, #{item.manualDepId,jdbcType=INTEGER}, #{item.depPlatModifyTime,jdbcType=TIMESTAMP}, 
        #{item.createTime,jdbcType=TIMESTAMP}, #{item.modifyTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into `app_dep` (
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id' == column.value">
          #{item.id,jdbcType=BIGINT}
        </if>
        <if test="'app_name' == column.value">
          #{item.appName,jdbcType=VARCHAR}
        </if>
        <if test="'owners_dep_id' == column.value">
          #{item.ownersDepId,jdbcType=VARCHAR}
        </if>
        <if test="'owners_phone' == column.value">
          #{item.ownersPhone,jdbcType=VARCHAR}
        </if>
        <if test="'owners_mail' == column.value">
          #{item.ownersMail,jdbcType=VARCHAR}
        </if>
        <if test="'developers_dep_id' == column.value">
          #{item.developersDepId,jdbcType=VARCHAR}
        </if>
        <if test="'developers_phone' == column.value">
          #{item.developersPhone,jdbcType=VARCHAR}
        </if>
        <if test="'developers_mail' == column.value">
          #{item.developersMail,jdbcType=VARCHAR}
        </if>
        <if test="'dep_id' == column.value">
          #{item.depId,jdbcType=INTEGER}
        </if>
        <if test="'manual_dep_id' == column.value">
          #{item.manualDepId,jdbcType=INTEGER}
        </if>
        <if test="'dep_plat_modify_time' == column.value">
          #{item.depPlatModifyTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'create_time' == column.value">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'modify_time' == column.value">
          #{item.modifyTime,jdbcType=TIMESTAMP}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>